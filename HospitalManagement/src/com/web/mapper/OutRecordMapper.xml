<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace:命名空间  -->
<mapper namespace="com.web.dao.OutRecordDao">

   <!-- 自定义结果集 -->
   <resultMap type="OutRecord" id="resultOutRecord">
   
     <!-- 主键   column:表中的字段名称      property:类中的属性名称 -->
      <id column="outID" property="outID"/>
      
      <result column="isDelete" property="isDelete"/>
      <result column="outTime" property="outTime"/>
      <result column="patientID" property="patientID"/>
      <result column="outSituation" property="outSituation"/>
	  <result column="outCostClear" property="outCostClear"/>
	  
   <!-- 多对一   property:属性名称   javaType：关联的对象类型-->
     <association property="patient" javaType="Patient">
         <id column="patientID" property="patientID"/>
           
          <result column="patientName" property="patientName"/>
          <result column="ID" property="ID"/>
     </association>
     
  </resultMap>
        
     <!-- 自定义SQL语句，以便于其他地方重复使用 -->
     <sql id="OutRecordCondition">
           <where>
		          o.patientID = p.patientID
		          and p.isDelete = 0
		          and o.isDelete = 0
				 
			 	<if test="patient.patientName!=null and  patient.patientName!=''">
				       and p.patientName like concat('%',concat(#{patient.patientName},'%'))
				 </if>				 
				 
				 <if test="patient.ID!=null and  patient.ID!=''">
				       and p.ID like concat('%',concat(#{patient.ID},'%'))
				 </if>
				 
		    </where>
     </sql>


    <select id="queryByCondition" resultMap="resultOutRecord" parameterType="OutRecord">
            SELECT o.*,p.*
		    from OutRecord o,Patient p
		   <include refid="OutRecordCondition"/>
    </select>
    
    
     <update id="update" parameterType="OutRecord">
         update OutRecord set

		   <if test="patientID != null">
			patientID = #{patientID},
		   </if>
		   <if test="outTime != null">
			outTime=#{outTime},
		   </if>
		   <if test="outSituation != null">
			outSituation=#{outSituation},
		   </if>
		   <if test="outCostClear != null">
			outCostClear=#{outCostClear}
		   </if>
          
		  where outID=#{outID}
    </update>
    
     <select id="queryById" parameterType="Integer" resultMap="resultOutRecord" >
           SELECT o.*,p.*
		    from OutRecord o,Patient p
		    <where>
		          and o.patientID = p.patientID
		          and p.isDelete = 0
		          and o.isDelete = 0
		          and o.outID = #{outID}
		    </where>
    </select>
    
    <update id="delete" parameterType="Integer">
         update OutRecord set
          isDelete = 1
		  where outID=#{outID}
    </update>
    
    <insert id="add" parameterType="OutRecord">
    	insert into OutRecord (isDelete,patientID,outSituation,outCostClear,outTime) 
    	values (0,#{patientID},#{outSituation},#{outCostClear},#{outTime});
    </insert>
    
</mapper>

