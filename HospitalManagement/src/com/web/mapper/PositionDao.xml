<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.PositionDao">
  <resultMap id="BaseResultMap" type="com.web.entity.Position">
    <id column="poId" jdbcType="INTEGER" property="poId" />
    <result column="departmentID" jdbcType="INTEGER" property="departmentID" />
    <result column="poName" jdbcType="VARCHAR" property="poName" />
    <result column="poSalary" jdbcType="VARCHAR" property="poSalary" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  
  <!-- 自定义结果集 -->
   <resultMap type="com.web.entity.Position" id="resultPosition">
       <!-- 主键 -->
       <id column="poId" property="poId"/>
       <!-- 其他属性 -->
       <result column="poName" property="poName"/>
       <result column="departmentID" property="departmentID"/>
       <result column="poSalary" property="poSalary"/>
       <result column="isDelete" property="isDelete"/>
       <!-- 多对一 -->
       <association property="department" javaType="Department">
	    <id column="departmentID" jdbcType="INTEGER" property="departmentID" />
	    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
	    <result column="departmentName" jdbcType="VARCHAR" property="departmentName" />
	    <result column="departmentType" jdbcType="INTEGER" property="departmentType" />
	    <result column="departmentAddress" jdbcType="VARCHAR" property="departmentAddress" />
	    <result column="departmentPhone" jdbcType="VARCHAR" property="departmentPhone" />
       </association>
   </resultMap>
   <!-- 查询 -->
   <select id="queryByCondition" parameterType="map" resultMap="resultPosition">
       SELECT p.*,d.*
		    from Position p,Department d
		       where p.departmentID=d.departmentID
		       and (p.isDelete=0 or p.isDelete is null)
		       <include refid="conditionSql"></include>
   </select>
   <select id="query" resultMap="resultPosition">
       SELECT p.*,d.*
		    from Position p,Department d
		       where p.departmentID=d.departmentID
		       and (p.isDelete=0 or p.isDelete is null)
   </select>
	<sql id="conditionSql">
        <if test="poName!=null and poName!=''">
           and p.poName like concat('%',concat(#{poName},'%'))
        </if>
        <if test="poSalary1!=null">
           <if test="poSalary2 == null">
             and p.poSalary >= #{poSalary1}
           </if>
           <if test="poSalary2!=null">
	           and p.poSalary between #{poSalary1} and #{poSalary2}
	        </if>
        </if>
         
        <if test="departmentID != null and departmentID !=''">
            and p.departmentID=#{departmentID}
        </if>
   </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    poId, departmentID, poName, poSalary, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.web.entity.PositionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Position
    where poId = #{poId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Position
    where poId = #{poId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.entity.PositionExample">
    delete from Position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.Position">
    insert into Position (poId, departmentID, poName, 
      poSalary, isDelete)
    values (#{poId,jdbcType=INTEGER}, #{departmentID,jdbcType=INTEGER}, #{poName,jdbcType=VARCHAR}, 
      #{poSalary,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.Position">
    insert into Position
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="poId != null">
        poId,
      </if>
      <if test="departmentID != null">
        departmentID,
      </if>
      <if test="poName != null">
        poName,
      </if>
      <if test="poSalary != null">
        poSalary,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="poId != null">
        #{poId,jdbcType=INTEGER},
      </if>
      <if test="departmentID != null">
        #{departmentID,jdbcType=INTEGER},
      </if>
      <if test="poName != null">
        #{poName,jdbcType=VARCHAR},
      </if>
      <if test="poSalary != null">
        #{poSalary,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.entity.PositionExample" resultType="java.lang.Long">
    select count(*) from Position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Position
    <set>
      <if test="record.poId != null">
        poId = #{record.poId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentID != null">
        departmentID = #{record.departmentID,jdbcType=INTEGER},
      </if>
      <if test="record.poName != null">
        poName = #{record.poName,jdbcType=VARCHAR},
      </if>
      <if test="record.poSalary != null">
        poSalary = #{record.poSalary,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        isDelete = #{record.isDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Position
    set poId = #{record.poId,jdbcType=INTEGER},
      departmentID = #{record.departmentID,jdbcType=INTEGER},
      poName = #{record.poName,jdbcType=VARCHAR},
      poSalary = #{record.poSalary,jdbcType=VARCHAR},
      isDelete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.Position">
    update Position
    <set>
      <if test="departmentID != null">
        departmentID = #{departmentID,jdbcType=INTEGER},
      </if>
      <if test="poName != null">
        poName = #{poName,jdbcType=VARCHAR},
      </if>
      <if test="poSalary != null">
        poSalary = #{poSalary,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where poId = #{poId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.Position">
    update Position
    set departmentID = #{departmentID,jdbcType=INTEGER},
      poName = #{poName,jdbcType=VARCHAR},
      poSalary = #{poSalary,jdbcType=VARCHAR},
      isDelete = #{isDelete,jdbcType=INTEGER}
    where poId = #{poId,jdbcType=INTEGER}
  </update>
</mapper>